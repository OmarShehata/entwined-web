import S from"./PatternBase.74795690.js";class f{constructor(r,i,o,n){this.hue=r,this.offset=i,this.direction=o,this.alternate=n}}function w(P,r){if(P>=0)return P;const i=Math.ceil(Math.abs(P)/r);return P+i*r}class b extends S{constructor(r,i){super(r,i);this.snakePaths={},this.snakePathsAlternate={},this.snakeLength=10,this.counter=0,this.snakeConfigs=[],this.numSnakesPerCircle={},this.speedParam=3,this.snakeFadeInSin=0,this.lfoCounter=0;const o={},n={},g={"circle-1":-1,"circle-2":1,"circle-3":-2},u=5;for(let t of i.fairyCircles){let k=function(h){for(let c=-u/2;c<=u/2;c++){const s=h.cubes.length,m=Math.round(c+s)%s,C=w(m-l,s)%s;d.push(h.cubes[C])}for(let c=u/2;c>=-u/2;c--){const s=h.cubes.length,m=Math.round(c+s+6)%s,C=w(m-l,s)%s;p.push(h.cubes[C])}};const d=[],p=[];let l=g[t.pieceId];if(l==null&&(l=0),t.pieceId=="circle-3")for(let h of t.miniClusters)k(h);else for(let h=t.miniClusters.length-1;h>=0;h--){const c=t.miniClusters[h];k(c)}n[t.pieceId]=d,o[t.pieceId]=p}for(let[t,d]of Object.entries(o)){const p=[],l=[],k=t,h=d,c=n[k];for(let s=0;s<h.length;s++)s%12<=u?(p.push(h[s]),l.push(c[s])):(p.push(c[s]),l.push(h[s]));this.snakePaths[t]=p,this.snakePathsAlternate[k]=l}const{snakeConfigs:e,numSnakesPerCircle:a}=this;e.push(new f(0,0,1,!1)),e.push(new f(50,20,1,!1)),e.push(new f(100,0,-1,!0)),e.push(new f(200,20,-1,!0)),e.push(new f(300,40,1,!1)),e.push(new f(350,70,1,!0)),e.push(new f(0,40,-1,!0)),e.push(new f(150,60,-1,!0)),e.push(new f(170,85,1,!0)),e.push(new f(70,100,1,!1)),a["circle-1"]=6,a["circle-2"]=6,a["circle-3"]=10}updateSineLFO(r){const i=0,o=.9,n=1e3*30;this.lfoCounter+=r,this.snakeFadeInSin=(Math.sin(this.lfoCounter/n*(Math.PI*2))*.5+.5)*(o-i)+i}makeSnake(r,i,o,n,g,u){let e=this.snakePaths[r];u&&(e=this.snakePathsAlternate[r]);for(let a=0;a<this.snakeLength;a++){let t=Math.round(a+this.counter+o)%e.length,d=a/this.snakeLength;g==-1&&(t=w(Math.round(a-this.counter+o)%e.length,e.length),d=1-a/this.snakeLength);const p=d*100*n,l=d*100*n,k=e[t];k.getBrightness()<=p&&k.setHSB(i,l,p)}}run(r){this.counter+=r*.005*this.speedParam,this.updateSineLFO(r);for(let i of this.model.fairyCircles)for(let o of i.miniClusters)for(let n=0;n<o.cubes.length;n++)o.cubes[n].setHSB(0,0,0);for(let[i,o]of Object.entries(this.numSnakesPerCircle)){const n=o,g=i;let u=this.snakeFadeInSin*n;u<=0&&(u=0);for(let e=0;e<n;e++){const a=this.snakeConfigs[e];let t=u-e+1;t<=0&&(t=0),t>=1&&(t=1),this.makeSnake(g,a.hue,a.offset,t,a.direction,a.alternate)}}}}export{b as default};
